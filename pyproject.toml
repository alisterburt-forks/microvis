# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# https://peps.python.org/pep-0621/
[project]
name = "microvis"
description = "package description."
readme = "README.md"
requires-python = ">=3.8"
license = { text = "BSD 3-Clause License" }
authors = [{ email = "talley.lambert@gmail.com" }, { name = "Talley Lambert" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["version"]
dependencies = [
    "numpy",
    "psygnal[proxy]",
    "pydantic",
    "jupyter-rfb",
    "ipywidgets<8.0",
    "vispy",
    "pyopengl",
    "loguru",
    "imageio",
]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = ["pytest>=6.0", "pytest-cov", "pytest-qt", "vispy", "pygfx"]
dev = [
    "black",
    "ipython",
    "isort",
    "mypy",
    "pdbpp",
    "pre-commit",
    "pytest-cov",
    "pytest",
    "rich",
    "ruff",
]
pyqt5 = ["pyqt5"]
pyqt6 = ["pyqt6"]
pyside2 = ["pyside2"]
pyside6 = ["pyside6"]
docs = [
    "griffe==0.22.0",
    "mkdocs-material~=8.3",
    "mkdocs-minify-plugin==0.5.0",
    "mkdocs==1.3.0",
    "mkdocstrings-python==0.7.0",
    "mkdocstrings==0.19.0",
    "mkdocs-macros-plugin==0.7.0",
    "typing_extensions>=4.0",
]

[project.urls]
homepage = "https://github.com/tlambert03/microvis"
repository = "https://github.com/tlambert03/microvis"

# same as console_scripts entry point
# [project.scripts]
# spam-cli = "spam:main_cli"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# [project.entry-points."spam.magical"]
# tomatoes = "spam:main_tomatoes"


# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src", "tests"]
select = [
    "E",  # style errors
    "F",  # flakes
    "D",  # pydocstyle
    "I",  # isort
    "UP", # pyupgrade
    # "N",  # pep8-naming
    "S",    # bandit
    "C",    # comprehensions
    "B",    # bugbear
    "A001", # Variable shadowing a python builtin
    "RUF",  # ruff-specific rules
]
extend-ignore = [
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D", "S101"]
"notes/**/*.py" = ["D"]
"examples/*.py" = ["D"]
"src/**/*.py" = ["D"]


# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore:distutils Version classes are deprecated:",
    "ignore:GPUs can't support floating point data with more than 32-bits:",
]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".github_changelog_generator",
    ".pre-commit-config.yaml",
    "tests/**/*",
    "mkdocs.yml",
    "docs/**/*",
    "examples/**/*",
    "notes/**/*",
    ".ruff_cache/**/*",
]

[tool.pyright]
include = ['src']
