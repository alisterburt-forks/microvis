name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request: {}
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # every week

jobs:
  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: pip install check-manifest && check-manifest

  test:
    name: ${{ matrix.platform }} ${{ matrix.python-version }} ${{ matrix.backend }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        platform: [ubuntu-latest, macos-latest, windows-latest]
        backend: ["pyqt5", "pyside2", "pyqt6", "pyside6"]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3

      - uses: tlambert03/setup-qt-libs@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "**/pyproject.toml"

      - name: Install dependencies
        if: ${{ github.event_name != 'schedule' }}
        run: |
          python -m pip install -U pip
          python -m pip install -e .[test,${{ matrix.backend }}]

      - name: Install dependencies (--pre)
        if: ${{ github.event_name == 'schedule' }}
        run: |
          python -m pip install -U pip
          python -m pip install -e .[test,${{ matrix.backend }}] --pre

      - name: Test with tox
        uses: GabrielBB/xvfb-action@v1
        with:
          run: python -m pytest -v --color=yes --cov=microvis --cov-report=xml

      - name: Coverage
        uses: codecov/codecov-action@v3

  deploy:
    name: Deploy
    needs: test
    if: "success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: install
        run: |
          git tag
          pip install -U pip
          pip install -U build twine
          python -m build
          twine check dist/*
          ls -lh dist

      - name: Build and publish
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}

      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
